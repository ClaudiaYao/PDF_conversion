[{"Section_Num": "1", "Section": "1 Introduction", "Text": "self attention based architectures, in particular transformers (vaswani et al., ), have become the model of choice in natural language processing (nlp). the dominant approach is to pre train on a large text corpus and then ne tune on a smaller task specic dataset (devlin et al., ). thanks to transformers computational efciency and scalability, it has become possible to train models of unprecedented size, with over b parameters (brown et al., ; lepikhin et al., ). with the models and datasets growing, there is still no sign of saturating performance. in computer vision, however, convolutional architectures remain dominant (lecun et al., ; krizhevsky et al., ; he et al., ). inspired by nlp successes, multiple works try combining cnn like architectures with self attention (wang et al., ; carion et al., ), some replacing the convolutions entirely (ramachandran et al., ; wang et al., a). the latter models, while theoretically efcient, have not yet been scaled effectively on modern hardware accelerators due to the use of specialized attention patterns. therefore, in large scale image recognition, classic resnet- like architectures are still state of the art (mahajan et al., ; xie et al., ; kolesnikov et al., ). inspired by the transformer scaling successes in nlp, we experiment with applying a standard transformer directly to images, with the fewest possible modications. to do so, we split an image into patches and provide the sequence of linear embeddings of these patches as an input to a trans- former. image patches are treated the same way as tokens (words) in an nlp application. we train the model on image classication in supervised fashion. when trained on mid sized datasets such as imagenet without strong regularization, these mod- els yield modest accuracies of a few percentage points below resnets of comparable size. this seemingly discouraging outcome may be expected: transformers lack some of the inductive biases fine tuning code and pre trained models are available at https://github.com/ google research/vision_transformer arxiv:v jun published as a conference paper at iclr inherent to cnns, such as translation equivariance and locality, and therefore do not generalize well when trained on insufcient amounts of data. however, the picture changes if the models are trained on larger datasets (m m images). we nd that large scale training trumps inductive bias. our vision transformer (vit) attains excellent results when pre trained at sufcient scale and transferred to tasks with fewer datapoints. when pre trained on the public imagenet k dataset or the in house jft m dataset, vit approaches or beats state of the art on multiple image recognition benchmarks. in particular, the best model reaches the accuracy of % on imagenet, % on imagenet real, % on cifar-, and % on the vtab suite of tasks. ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "2", "Section": "2 Related Work", "Text": "transformers were proposed by vaswani et al. () for machine translation, and have since be- come the state of the art method in many nlp tasks. large transformer based models are often pre trained on large corpora and then ne tuned for the task at hand: bert (devlin et al., ) uses a denoising self supervised pre training task, while the gpt line of work uses language mod- eling as its pre training task (radford et al., ; ; brown et al., ). naive application of self attention to images would require that each pixel attends to every other pixel. with quadratic cost in the number of pixels, this does not scale to realistic input sizes. thus, to apply transformers in the context of image processing, several approximations have been tried in the past. parmar et al. () applied the self attention only in local neighborhoods for each query pixel instead of globally. such local multi head dot product self attention blocks can completely replace convolutions (hu et al., ; ramachandran et al., ; zhao et al., ). in a different line of work, sparse transformers (child et al., ) employ scalable approximations to global self- attention in order to be applicable to images. an alternative way to scale attention is to apply it in blocks of varying sizes (weissenborn et al., ), in the extreme case only along individual axes (ho et al., ; wang et al., a). many of these specialized attention architectures demonstrate promising results on computer vision tasks, but require complex engineering to be implemented efciently on hardware accelerators. most related to ours is the model of cordonnier et al. (), which extracts patches of size from the input image and applies full self attention on top. this model is very similar to vit, but our work goes further to demonstrate that large scale pre training makes vanilla transformers competitive with (or even better than) state of the art cnns. moreover, cordonnier et al. () use a small patch size of pixels, which makes the model applicable only to small resolution images, while we handle medium resolution images as well. there has also been a lot of interest in combining convolutional neural networks (cnns) with forms of self attention, e.g. by augmenting feature maps for image classication (bello et al., ) or by further processing the output of a cnn using self attention, e.g. for object detection (hu et al., ; carion et al., ), video processing (wang et al., ; sun et al., ), image classication (wu et al., ), unsupervised object discovery (locatello et al., ), or unied text vision tasks (chen et al., c; lu et al., ; li et al., ). another recent related model is image gpt (igpt) (chen et al., a), which applies transformers to image pixels after reducing image resolution and color space. the model is trained in an unsu- pervised fashion as a generative model, and the resulting representation can then be ne tuned or probed linearly for classication performance, achieving a maximal accuracy of % on imagenet. our work adds to the increasing collection of papers that explore image recognition at larger scales than the standard imagenet dataset. the use of additional data sources allows to achieve state of- the art results on standard benchmarks (mahajan et al., ; touvron et al., ; xie et al., ). moreover, sun et al. () study how cnn performance scales with dataset size, and kolesnikov et al. (); djolonga et al. () perform an empirical exploration of cnn transfer learning from large scale datasets such as imagenet k and jft m. we focus on these two latter datasets as well, but train transformers instead of resnet based models used in prior works. published as a conference paper at iclr transformer encoder mlp head vision transformer (vit) * linear projection of flattened patches * extra learnable embedding patch + position embedding class bird ball car ... embedded patches multi head attention norm mlp norm + l x + transformer encoder figure : model overview. we split an image into xed size patches, linearly embed each of them, add position embeddings, and feed the resulting sequence of vectors to a standard transformer encoder. in order to perform classication, we use the standard approach of adding an extra learnable classication token to the sequence. the illustration of the transformer encoder was inspired by vaswani et al. (). ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "3", "Section": "3 Method", "Text": "", "Subsections": [{"Section_Num": "NA", "Section": "NA", "Text": "in model design we follow the original transformer (vaswani et al., ) as closely as possible. an advantage of this intentionally simple setup is that scalable nlp transformer architectures and their efcient implementations can be used almost out of the box. vision transformer (vit) an overview of the model is depicted in figure the standard transformer receives as input a d sequence of token embeddings. to handle d images, we reshape the image x rhw c into a sequence of attened d patches xp rn(p c), where (h, w) is the resolution of the original image, c is the number of channels, (p, p) is the resolution of each image patch, and n = hw/p is the resulting number of patches, which also serves as the effective input sequence length for the transformer. the transformer uses constant latent vector size d through all of its layers, so we atten the patches and map to d dimensions with a trainable linear projection (eq. ). we refer to the output of this projection as the patch embeddings. similar to berts token, we prepend a learnable embedding to the sequence of embed- ded patches (z = xclass), whose state at the output of the transformer encoder (z l) serves as the image representation y (eq. ). both during pre training and ne tuning, a classication head is at- tached to z l. the classication head is implemented by a mlp with one hidden layer at pre training time and by a single linear layer at ne tuning time. position embeddings are added to the patch embeddings to retain positional information. we use standard learnable d position embeddings, since we have not observed signicant performance gains from using more advanced d aware position embeddings (appendix d.). the resulting sequence of embedding vectors serves as input to the encoder. the transformer encoder (vaswani et al., ) consists of alternating layers of multiheaded self- attention (msa, see appendix a) and mlp blocks (eq. , ). layernorm (ln) is applied before every block, and residual connections after every block (wang et al., ; baevski & auli, ). published as a conference paper at iclr the mlp contains two layers with a gelu non linearity. z = [xclass; x pe; x pe; ; xn p e] + epos, e r(p c)d, epos r(n+)d () z = msa(ln(z)) + z, = . . . l () z= mlp(ln(z )) + z , = . . . l () y = ln(z l) () inductive bias. we note that vision transformer has much less image specic inductive bias than cnns. in cnns, locality, two dimensional neighborhood structure, and translation equivariance are baked into each layer throughout the whole model. in vit, only mlp layers are local and transla- tionally equivariant, while the self attention layers are global. the two dimensional neighborhood structure is used very sparingly: in the beginning of the model by cutting the image into patches and at ne tuning time for adjusting the position embeddings for images of different resolution (as de- scribed below). other than that, the position embeddings at initialization time carry no information about the d positions of the patches and all spatial relations between the patches have to be learned from scratch. hybrid architecture. as an alternative to raw image patches, the input sequence can be formed from feature maps of a cnn (lecun et al., ). in this hybrid model, the patch embedding projection e (eq. ) is applied to patches extracted from a cnn feature map. as a special case, the patches can have spatial size x, which means that the input sequence is obtained by simply attening the spatial dimensions of the feature map and projecting to the transformer dimension. the classication input embedding and position embeddings are added as described above. fine tuning and higher resolution ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "3_2", "Section": "3.2 Fine-tuning and Higher Resolution", "Text": "typically, we pre train vit on large datasets, and ne tune to (smaller) downstream tasks. for this, we remove the pre trained prediction head and attach a zero initialized d k feedforward layer, where k is the number of downstream classes. it is often benecial to ne tune at higher resolution than pre training (touvron et al., ; kolesnikov et al., ). when feeding images of higher resolution, we keep the patch size the same, which results in a larger effective sequence length. the vision transformer can handle arbitrary sequence lengths (up to memory constraints), however, the pre trained position embeddings may no longer be meaningful. we therefore perform d interpolation of the pre trained position embeddings, according to their location in the original image. note that this resolution adjustment and patch extraction are the only points at which an inductive bias about the d structure of the images is manually injected into the vision transformer. ", "Subsections": [], "Groundtruth": ""}], "Groundtruth": ""}, {"Section_Num": "4", "Section": "4 Experiments", "Text": "", "Subsections": [{"Section_Num": "NA", "Section": "NA", "Text": "we evaluate the representation learning capabilities of resnet, vision transformer (vit), and the hybrid. to understand the data requirements of each model, we pre train on datasets of varying size and evaluate many benchmark tasks. when considering the computational cost of pre training the model, vit performs very favourably, attaining state of the art on most recognition benchmarks at a lower pre training cost. lastly, we perform a small experiment using self supervision, and show that self supervised vit holds promise for the future. setup ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "4_1", "Section": "4.1 Setup", "Text": "datasets. to explore model scalability, we use the ilsvrc- imagenet dataset with k classes and m images (we refer to it as imagenet in what follows), its superset imagenet k with k classes and m images (deng et al., ), and jft (sun et al., ) with k classes and m high resolution images. we de duplicate the pre training datasets w.r.t. the test sets of the downstream tasks following kolesnikov et al. (). we transfer the models trained on these dataset to several benchmark tasks: imagenet on the original validation labels and the cleaned up real labels (beyer et al., ), cifar-/ (krizhevsky, ), oxford iiit pets (parkhi et al., ), and oxford flowers- (nilsback & zisserman, ). for these datasets, pre processing follows kolesnikov et al. (). published as a conference paper at iclr model layers hidden size d mlp size heads params vit base m vit large m vit huge m table : details of vision transformer model variants. we also evaluate on the -task vtab classication suite (zhai et al., b). vtab evaluates low data transfer to diverse tasks, using training examples per task. the tasks are divided into three groups: natural tasks like the above, pets, cifar, etc. specialized medical and satellite imagery, and structured tasks that require geometric understanding like localization. model variants. we base vit congurations on those used for bert (devlin et al., ), as summarized in table the base and large models are directly adopted from bert and we add the larger huge model. in what follows we use brief notation to indicate the model size and the input patch size: for instance, vit l/ means the large variant with input patch size. note that the transformers sequence length is inversely proportional to the square of the patch size, thus models with smaller patch size are computationally more expensive. for the baseline cnns, we use resnet (he et al., ), but replace the batch normalization lay- ers (ioffe & szegedy, ) with group normalization (wu & he, ), and used standardized convolutions (qiao et al., ). these modications improve transfer (kolesnikov et al., ), and we denote the modied model resnet (bit). for the hybrids, we feed the intermediate fea- ture maps into vit with patch size of one pixel. to experiment with different sequence lengths, we either (i) take the output of stage of a regular resnet or (ii) remove stage , place the same number of layers in stage (keeping the total number of layers), and take the output of this extended stage option (ii) results in a x longer sequence length, and a more expensive vit model. training & fine tuning. we train all models, including resnets, using adam (kingma & ba, ) with = , = , a batch size of and apply a high weight decay of , which we found to be useful for transfer of all models (appendix d. shows that, in contrast to common practices, adam works slightly better than sgd for resnets in our setting). we use a linear learning rate warmup and decay, see appendix b. for details. for ne tuning we use sgd with momentum, batch size , for all models, see appendix b.. for imagenet results in table , we ne tuned at higher resolution: for vit l/ and for vit h/, and also used polyak & juditsky () averaging with a factor of (ramachandran et al., ; wang et al., b). metrics. we report results on downstream datasets either through few shot or ne tuning accuracy. fine tuning accuracies capture the performance of each model after ne tuning it on the respective dataset. few shot accuracies are obtained by solving a regularized least squares regression problem that maps the (frozen) representation of a subset of training images to {, }k target vectors. this formulation allows us to recover the exact solution in closed form. though we mainly focus on ne tuning performance, we sometimes use linear few shot accuracies for fast on the y evaluation where ne tuning would be too costly. ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "4_2", "Section": "4.2 Comparison to State of the Art", "Text": "we rst compare our largest models vit h/ and vit l/ to state of the art cnns from the literature. the rst comparison point is big transfer (bit) (kolesnikov et al., ), which performs supervised transfer learning with large resnets. the second is noisy student (xie et al., ), which is a large efcientnet trained using semi supervised learning on imagenet and jft- m with the labels removed. currently, noisy student is the state of the art on imagenet and bit l on the other datasets reported here. all models were trained on tpuv hardware, and we report the number of tpuv core days taken to pre train each of them, that is, the number of tpu v cores ( per chip) used for training multiplied by the training time in days. table shows the results. the smaller vit l/ model pre trained on jft m outperforms bit l (which is pre trained on the same dataset) on all tasks, while requiring substantially less computa- tional resources to train. the larger model, vit h/, further improves the performance, especially on the more challenging datasets imagenet, cifar-, and the vtab suite. interestingly, this published as a conference paper at iclr ours jft ours jft ours ik bit l noisy student (vit h/) (vit l/) (vit l/) (resnetx) (efcientnet l) imagenet / imagenet real cifar- cifar- oxford iiit pets oxford flowers- vtab ( tasks) tpuv core days k k k k k table : comparison with state of the art on popular image classication benchmarks. we re- port mean and standard deviation of the accuracies, averaged over three ne tuning runs. vision transformer models pre trained on the jft m dataset outperform resnet based baselines on all datasets, while taking substantially less computational resources to pre train. vit pre trained on the smaller public imagenet k dataset performs well too. slightly improved % result reported in touvron et al. (). vtab ( tasks) accuracy natural ( tasks) specialized ( tasks) structured ( tasks) vit h/ bit l (rx) vivi ex-% (rx) sl (rx) figure : breakdown of vtab performance in natural, specialized, and structured task groups. model still took substantially less compute to pre train than prior state of the art. however, we note that pre training efciency may be affected not only by the architecture choice, but also other pa- rameters, such as training schedule, optimizer, weight decay, etc. we provide a controlled study of performance vs. compute for different architectures in section . finally, the vit l/ model pre trained on the public imagenet k dataset performs well on most datasets too, while taking fewer resources to pre train: it could be trained using a standard cloud tpuv with cores in ap- proximately days. figure decomposes the vtab tasks into their respective groups, and compares to previous sota methods on this benchmark: bit, vivi a resnet co trained on imagenet and youtube (tschannen et al., ), and sl supervised plus semi supervised learning on imagenet (zhai et al., a). vit h/ outperforms bit rx, and other methods, on the natural and structured tasks. on the specialized the performance of the top two models is similar. ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "4_3", "Section": "4.3 Pre-training Data Requirements", "Text": "the vision transformer performs well when pre trained on a large jft m dataset. with fewer inductive biases for vision than resnets, how crucial is the dataset size? we perform two series of experiments. first, we pre train vit models on datasets of increasing size: imagenet, imagenet k, and jft- m. to boost the performance on the smaller datasets, we optimize three basic regularization parameters weight decay, dropout, and label smoothing. figure shows the results after ne- tuning to imagenet (results on other datasets are shown in table ) when pre trained on the smallest dataset, imagenet, vit large models underperform compared to vit base models, despite (moderate) regularization. with imagenet k pre training, their performances are similar. only with jft m, do we see the full benet of larger models. figure also shows the performance note that the imagenet pre trained models are also ne tuned, but again on imagenet. this is because the resolution increase during ne tuning improves the performance. published as a conference paper at iclr imagenet imagenet k jft m pre training dataset imagenet top accuracy bit vit b/ vit b/ vit l/ vit l/ vit h/ figure : transfer to imagenet. while large vit models perform worse than bit resnets (shaded area) when pre trained on small datasets, they shine when pre trained on larger datasets. similarly, larger vit variants overtake smaller ones as the dataset grows. m m m m number of jft pre training samples linear -shot imagenet top vit l/ vit l/ vit b/ vit b/ resnetx (bit) resnetx (bit) figure : linear few shot evaluation on ima- genet versus pre training size. resnets per- form better with smaller pre training datasets but plateau sooner than vit, which performs better with larger pre training. vit b is vit b with all hidden dimensions halved. transfer accuracy average- transformer (vit) resnet (bit) hybrid imagenet transformer (vit) resnet (bit) hybrid total pre training compute figure : performance versus pre training compute for different architectures: vision transformers, resnets, and hybrids. vision transformers generally outperform resnets with the same compu- tational budget. hybrids improve upon pure transformers for smaller model sizes, but the gap vanishes for larger models. region spanned by bit models of different sizes. the bit cnns outperform vit on imagenet, but with the larger datasets, vit overtakes. second, we train our models on random subsets of m, m, and m as well as the full jft- m dataset. we do not perform additional regularization on the smaller subsets and use the same hyper parameters for all settings. this way, we assess the intrinsic model properties, and not the effect of regularization. we do, however, use early stopping, and report the best validation accuracy achieved during training. to save compute, we report few shot linear accuracy instead of full ne- tuning accuracy. figure contains the results. vision transformers overt more than resnets with comparable computational cost on smaller datasets. for example, vit b/ is slightly faster than resnet; it performs much worse on the m subset, but better on m+ subsets. the same is true for resnetx and vit l/ this result reinforces the intuition that the convolutional inductive bias is useful for smaller datasets, but for larger ones, learning the relevant patterns directly from data is sufcient, even benecial. overall, the few shot results on imagenet (figure ), as well as the low data results on vtab (table ) seem promising for very low data transfer. further analysis of few shot properties of vit is an exciting direction of future work. published as a conference paper at iclr ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "4_4", "Section": "4.4 Scaling Study", "Text": "we perform a controlled scaling study of different models by evaluating transfer performance from jft m. in this setting data size does not bottleneck the models performances, and we assess performance versus pre training cost of each model. the model set includes: resnets, rx, rx rx, rx, rx, pre trained for epochs, plus rx and rx pre trained for epochs; vision transformers, vit b/, b/, l/, l/, pre trained for epochs, plus l/ and h/ pre trained for epochs; and hybrids, r+vit b/, b/, l/, l/ pre- trained for epochs, plus r+vit l/ pre trained for epochs (for hybrids, the number at the end of the model name stands not for the patch size, but for the total dowsampling ratio in the resnet backbone). figure contains the transfer performance versus total pre training compute (see appendix d. for details on computational costs). detailed results per model are provided in table in the ap- pendix. a few patterns can be observed. first, vision transformers dominate resnets on the performance/compute trade off. vit uses approximately less compute to attain the same performance (average over datasets). second, hybrids slightly outperform vit at small compu- tational budgets, but the difference vanishes for larger models. this result is somewhat surprising, since one might expect convolutional local feature processing to assist vit at any size. third, vision transformers appear not to saturate within the range tried, motivating future scaling efforts. ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "4_5", "Section": "4.5 Inspecting Vision Transformer", "Text": "input attention figure : representative ex- amples of attention from the output token to the input space. see appendix d. for details. to begin to understand how the vision transformer processes im- age data, we analyze its internal representations. the rst layer of the vision transformer linearly projects the attened patches into a lower dimensional space (eq. ). figure (left) shows the top prin- cipal components of the the learned embedding lters. the com- ponents resemble plausible basis functions for a low dimensional representation of the ne structure within each patch. after the projection, a learned position embedding is added to the patch representations. figure (center) shows that the model learns to encode distance within the image in the similarity of position em- beddings, i.e. closer patches tend to have more similar position em- beddings. further, the row column structure appears; patches in the same row/column have similar embeddings. finally, a sinusoidal structure is sometimes apparent for larger grids (appendix d). that the position embeddings learn to represent d image topology ex- plains why hand crafted d aware embedding variants do not yield improvements (appendix d.). self attention allows vit to integrate information across the entire image even in the lowest layers. we investigate to what degree the network makes use of this capability. specically, we compute the average distance in image space across which information is integrated, based on the attention weights (figure , right). this attention distance is analogous to receptive eld size in cnns. we nd that some heads attend to most of the image already in the lowest layers, showing that the ability to integrate information globally is indeed used by the model. other attention heads have consistently small attention distances in the low layers. this highly localized attention is less pronounced in hybrid models that apply a resnet before the transformer (figure , right), suggesting that it may serve a similar function as early convolutional layers in cnns. further, the attention distance increases with network depth. globally, we nd that the model attends to image regions that are semantically relevant for classication (figure ). ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "4_6", "Section": "4.6 Self-supervision", "Text": "transformers show impressive performance on nlp tasks. however, much of their success stems not only from their excellent scalability but also from large scale self supervised pre training (devlin published as a conference paper at iclr rgb embedding filters (first principal components) input patch column input patch row position embedding similarity cosine similarity network depth (layer) mean attention distance (pixels) vit l/ head head head ... figure : left: filters of the initial linear embedding of rgb values of vit l/ center: sim- ilarity of position embeddings of vit l/ tiles show the cosine similarity between the position embedding of the patch with the indicated row and column and the position embeddings of all other patches. right: size of attended area by head and network depth. each dot shows the mean attention distance across images for one of heads at one layer. see appendix d. for details. et al., ; radford et al., ). we also perform a preliminary exploration on masked patch prediction for self supervision, mimicking the masked language modeling task used in bert. with self supervised pre training, our smaller vit b/ model achieves % accuracy on imagenet, a signicant improvement of % to training from scratch, but still % behind supervised pre training. appendix b. contains further details. we leave exploration of contrastive pre training (chen et al., b; he et al., ; bachman et al., ; h enaff et al., ) to future work. ", "Subsections": [], "Groundtruth": ""}], "Groundtruth": ""}, {"Section_Num": "5", "Section": "5 Conclusion", "Text": "we have explored the direct application of transformers to image recognition. unlike prior works using self attention in computer vision, we do not introduce image specic inductive biases into the architecture apart from the initial patch extraction step. instead, we interpret an image as a sequence of patches and process it by a standard transformer encoder as used in nlp. this simple, yet scalable, strategy works surprisingly well when coupled with pre training on large datasets. thus, vision transformer matches or exceeds the state of the art on many image classication datasets, whilst being relatively cheap to pre train. while these initial results are encouraging, many challenges remain. one is to apply vit to other computer vision tasks, such as detection and segmentation. our results, coupled with those in carion et al. (), indicate the promise of this approach. another challenge is to continue exploring self- supervised pre training methods. our initial experiments show improvement from self supervised pre training, but there is still large gap between self supervised and large scale supervised pre- training. finally, further scaling of vit would likely lead to improved performance. acknowledgements the work was performed in berlin, z urich, and amsterdam. we thank many colleagues at google for their help, in particular andreas steiner for crucial help with the infrastructure and the open- source release of the code; joan puigcerver and maxim neumann for help with the large scale training infrastructure; dmitry lepikhin, aravindh mahendran, daniel keysers, mario lu ci c, noam shazeer, ashish vaswani, and colin raffel for useful discussions. references samira abnar and willem zuidema. quantifying attention ow in transformers. in acl, philip bachman, r devon hjelm, and william buchwalter. learning representations by maximizing mutual information across views. in neurips, published as a conference paper at iclr alexei baevski and michael auli. adaptive input representations for neural language modeling. in iclr, i. bello, b. zoph, q. le, a. vaswani, and j. shlens. attention augmented convolutional networks. in iccv, lucas beyer, olivier j. h enaff, alexander kolesnikov, xiaohua zhai, and a aron van den oord. are we done with imagenet? arxiv, tom b brown, benjamin mann, nick ryder, melanie subbiah, jared kaplan, prafulla dhariwal, arvind neelakantan, pranav shyam, girish sastry, amanda askell, et al. language models are few shot learners. arxiv, nicolas carion, francisco massa, gabriel synnaeve, nicolas usunier, alexander kirillov, and sergey zagoruyko. end to end object detection with transformers. in eccv, mark chen, alec radford, rewon child, jeff wu, and heewoo jun. generative pretraining from pixels. in icml, a. ting chen, simon kornblith, mohammad norouzi, and geoffrey e. hinton. a simple framework for contrastive learning of visual representations. in icml, b. yen chun chen, linjie li, licheng yu, ahmed el kholy, faisal ahmed, zhe gan, yu cheng, and jingjing liu. uniter: universal image text representation learning. in eccv, c. rewon child, scott gray, alec radford, and ilya sutskever. generating long sequences with sparse transformers. arxiv, jean baptiste cordonnier, andreas loukas, and martin jaggi. on the relationship between self- attention and convolutional layers. in iclr, j. deng, w. dong, r. socher, l. li, kai li, and li fei fei. imagenet: a large scale hierarchical image database. in cvpr, jacob devlin, ming wei chang, kenton lee, and kristina toutanova. bert: pre training of deep bidirectional transformers for language understanding. in naacl, josip djolonga, jessica yung, michael tschannen, rob romijnders, lucas beyer, alexander kolesnikov, joan puigcerver, matthias minderer, alexander damour, dan moldovan, sylvan gelly, neil houlsby, xiaohua zhai, and mario lucic. on robustness and transferability of convo- lutional neural networks. arxiv, kaiming he, xiangyu zhang, shaoqing ren, and jian sun. deep residual learning for image recog- nition. in cvpr, kaiming he, haoqi fan, yuxin wu, saining xie, and ross girshick. momentum contrast for unsupervised visual representation learning. in cvpr, jonathan ho, nal kalchbrenner, dirk weissenborn, and tim salimans. axial attention in multidi- mensional transformers. arxiv, han hu, jiayuan gu, zheng zhang, jifeng dai, and yichen wei. relation networks for object detection. in cvpr, han hu, zheng zhang, zhenda xie, and stephen lin. local relation networks for image recognition. in iccv, zilong huang, xinggang wang, yunchao wei, lichao huang, humphrey shi, wenyu liu, and thomas s. huang. ccnet: criss cross attention for semantic segmentation. in iccv, olivier j. h enaff, aravind srinivas, jeffrey de fauw, ali razavi, carl doersch, s. m. ali eslami, and aaron van den oord. data efcient image recognition with contrastive predictive coding. in icml, published as a conference paper at iclr sergey ioffe and christian szegedy. batch normalization: accelerating deep network training by reducing internal covariate shift. diederik p. kingma and jimmy ba. adam: a method for stochastic optimization. in iclr, alexander kolesnikov, lucas beyer, xiaohua zhai, joan puigcerver, jessica yung, sylvain gelly, and neil houlsby. big transfer (bit): general visual representation learning. in eccv, alex krizhevsky. learning multiple layers of features from tiny images. technical report, alex krizhevsky, ilya sutskever, and geoffrey e. hinton. imagenet classication with deep convo- lutional neural networks. in nips, y. lecun, b. boser, j. denker, d. henderson, r. howard, w. hubbard, and l. jackel. backpropa- gation applied to handwritten zip code recognition. neural computation, :, dmitry lepikhin, hyoukjoong lee, yuanzhong xu, dehao chen, orhan firat, yanping huang, maxim krikun, noam shazeer, and zhifeng chen. gshard: scaling giant models with conditional computation and automatic sharding. arxiv, liunian harold li, mark yatskar, da yin, cho jui hsieh, and kai wei chang. visualbert: a simple and performant baseline for vision and language. in arxiv, francesco locatello, dirk weissenborn, thomas unterthiner, aravindh mahendran, georg heigold, jakob uszkoreit, alexey dosovitskiy, and thomas kipf. object centric learning with slot atten- tion. arxiv, jiasen lu, dhruv batra, devi parikh, and stefan lee. vilbert: pretraining task agnostic visi- olinguistic representations for vision and language tasks. in neurips. dhruv mahajan, ross girshick, vignesh ramanathan, kaiming he, manohar paluri, yixuan li, ashwin bharambe, and laurens van der maaten. exploring the limits of weakly supervised pretraining. in eccv, m. nilsback and a. zisserman. automated ower classication over a large number of classes. in icvgip, omkar m. parkhi, andrea vedaldi, andrew zisserman, and c. v. jawahar. cats and dogs. in cvpr, niki parmar, ashish vaswani, jakob uszkoreit, lukasz kaiser, noam shazeer, alexander ku, and dustin tran. image transformer. in icml, b. t. polyak and a. b. juditsky. acceleration of stochastic approximation by averaging. siam journal on control and optimization, ():, doi: / url https://doi.org// siyuan qiao, huiyu wang, chenxi liu, wei shen, and alan yuille. weight standardization. arxiv preprint arxiv:, alec radford, karthik narasimhan, tim salimans, and ilya sutskever. improving language under- standing with unsupervised learning. technical report, alec radford, jeff wu, rewon child, david luan, dario amodei, and ilya sutskever. language models are unsupervised multitask learners. technical report, prajit ramachandran, niki parmar, ashish vaswani, irwan bello, anselm levskaya, and jon shlens. stand alone self attention in vision models. in neurips, chen sun, abhinav shrivastava, saurabh singh, and abhinav gupta. revisiting unreasonable ef- fectiveness of data in deep learning era. in iccv, chen sun, austin myers, carl vondrick, kevin murphy, and cordelia schmid. videobert: a joint model for video and language representation learning. in iccv, published as a conference paper at iclr hugo touvron, andrea vedaldi, matthijs douze, and herve jegou. fixing the train test resolution discrepancy. in neurips. hugo touvron, andrea vedaldi, matthijs douze, and herve jegou. fixing the train test resolution discrepancy: fixefcientnet. arxiv preprint arxiv:, michael tschannen, josip djolonga, marvin ritter, aravindh mahendran, neil houlsby, sylvain gelly, and mario lucic. self supervised learning of video induced visual invariances. in pro- ceedings of the ieee/cvf conference on computer vision and pattern recognition (cvpr), june ashish vaswani, noam shazeer, niki parmar, jakob uszkoreit, llion jones, aidan n gomez, ukasz kaiser, and illia polosukhin. attention is all you need. in nips, huiyu wang, yukun zhu, bradley green, hartwig adam, alan yuille, and liang chieh chen. axial deeplab: stand alone axial attention for panoptic segmentation. in eccv, a. huiyu wang, yukun zhu, bradley green, hartwig adam, alan yuille, and liang chieh chen. axial deeplab: stand alone axial attention for panoptic segmentation. arxiv preprint arxiv:, b. qiang wang, bei li, tong xiao, jingbo zhu, changliang li, derek f. wong, and lidia s. chao. learning deep transformer models for machine translation. in acl, xiaolong wang, ross girshick, abhinav gupta, and kaiming he. non local neural networks. in cvpr, dirk weissenborn, oscar t ackstr om, and jakob uszkoreit. scaling autoregressive video models. in iclr, bichen wu, chenfeng xu, xiaoliang dai, alvin wan, peizhao zhang, masayoshi tomizuka, kurt keutzer, and peter vajda. visual transformers: token based image representation and processing for computer vision. arxiv, yuxin wu and kaiming he. group normalization. in eccv, qizhe xie, minh thang luong, eduard hovy, and quoc v. le. self training with noisy student improves imagenet classication. in cvpr, xiaohua zhai, avital oliver, alexander kolesnikov, and lucas beyer. sl: self supervised semi- supervised learning. in iccv, a. xiaohua zhai, joan puigcerver, alexander kolesnikov, pierre ruyssen, carlos riquelme, mario lucic, josip djolonga, andre susano pinto, maxim neumann, alexey dosovitskiy, et al. a large scale study of representation learning with the visual task adaptation benchmark. arxiv preprint arxiv:, b. hengshuang zhao, jiaya jia, and vladlen koltun. exploring self attention for image recognition. in cvpr, published as a conference paper at iclr models dataset epochs base lr lr decay weight decay dropout vit b/{,} jft m linear vit l/ jft m linear vit l/ jft m / linear vit h/ jft m linear rx{,} jft m linear rx jft m linear rx{,} jft m linear r+vit b/{,} jft m linear r+vit l/ jft m linear r+vit l/ jft m / linear vit b/{,} imagenet k linear vit l/{,} imagenet k / linear vit- imagenet cosine table : hyperparameters for training. all models are trained with a batch size of and learn- ing rate warmup of k steps. for imagenet we found it benecial to additionally apply gradient clipping at global norm training resolution is appendix ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "A", "Section": "A Multihead Self-attention", "Text": "standard qkv self attention (sa, vaswani et al. ()) is a popular building block for neural archi- tectures. for each element in an input sequence z rnd, we compute a weighted sum over all values v in the sequence. the attention weights aij are based on the pairwise similarity between two elements of the sequence and their respective query qi and key kj representations. = zuqkv uqkv rddh, () a = softmax \u0010 qk/ p dh \u0011 a rnn, () sa(z) = av . () multihead self attention (msa) is an extension of sa in which we run k self attention operations, called heads, in parallel, and project their concatenated outputs. to keep compute and number of parameters constant when changing k, dh (eq. ) is typically set to d/k. msa(z) = umsa umsa rkdhd () ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "B", "Section": "B Experiment details", "Text": "", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "C", "Section": "C Additional Results", "Text": "we report detailed results corresponding to the gures presented in the paper. table corresponds to figure from the paper and shows transfer performance of different vit models pre trained on datasets of increasing size: imagenet, imagenet k, and jft m. table corresponds to published as a conference paper at iclr vit b/ vit b/ vit l/ vit l/ vit h/ imagenet cifar- - cifar- - imagenet - imagenet real - oxford flowers- - oxford iiit pets - imagenet k cifar- cifar- imagenet imagenet real oxford flowers- oxford iiit pets jft m cifar- cifar- imagenet imagenet real oxford flowers- oxford iiit pets table : top accuracy (in %) of vision transformer on various datasets when pre trained on im- agenet, imagenet k or jftm. these values correspond to figure in the main text. models are ne tuned at resolution. note that the imagenet results are computed without additional techniques (polyak averaging and resolution images) used to achieve results in table epochs imagenet imagenet real cifar- cifar- pets flowers exaflops name vit b/ vit b/ vit l/ vit l/ vit l/ vit h/ resnetx resnetx resnetx resnetx resnetx resnetx resnetx rx+vit b/ rx+vit b/ rx+vit l/ rx+vit l/ rx+vit l/ table : detailed results of model scaling experiments. these correspond to figure in the main paper. we show transfer accuracy on several datasets, as well as the pre training compute (in ex- aflops). figure from the paper and shows the transfer performance of vit, resnet, and hybrid models of varying size, as well as the estimated computational cost of their pre training. ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "D", "Section": "D Additional Analyses", "Text": "", "Subsections": [{"Section_Num": "D_1", "Section": "D.1 SGD vs. Adam for ResNets", "Text": "resnets are typically trained with sgd and our use of adam as optimizer is quite unconventional. here we show the experiments that motivated this choice. namely, we compare the ne tuning published as a conference paper at iclr resnet resnetx dataset adam sgd adam sgd imagenet cifar cifar oxford iiit pets oxford flowers- average table : fine tuning resnet models pre trained with adam and sgd. relative compute imagenet shot models all depth patch size width mlp width relative compute average shot models all depth patch size width mlp width figure : scaling different model dimensions of the vision transformer. performance of two resnets x and x pre trained on jft with sgd and adam. for sgd, we use the hyperparameters recommended by kolesnikov et al. (). results are presented in table adam pre training outperforms sgd pre training on most datasets and on average. this justies the choice of adam as the optimizer used to pre train resnets on jft. note that the absolute numbers are lower than those reported by kolesnikov et al. (), since we pre train only for epochs, not ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "D_2", "Section": "D.2 Transformer shape", "Text": "we ran ablations on scaling different dimensions of the transformer architecture to nd out which are best suited for scaling to very large models. figure shows -shot performance on imagenet for different congurations. all congurations are based on a vit model with layers, d = , dmlp = and a patch size of , the intersection of all lines. we can see that scaling the depth results in the biggest improvements which are clearly visible up until layers. however, diminishing returns are already visible after layers. interestingly, scaling the width of the net- work seems to result in the smallest changes. decreasing the patch size and thus increasing the effective sequence length shows surprisingly robust improvements without introducing parameters. these ndings suggest that compute might be a better predictor of performance than the number of parameters, and that scaling should emphasize depth over width if any. overall, we nd that scaling all dimensions proportionally results in robust improvements. ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "D_3", "Section": "D.3 Head Type and class token", "Text": "in order to stay as close as possible to the original transformer model, we made use of an additional token, which is taken as image representation. the output of this token is then trans- formed into a class prediction via a small multi layer perceptron (mlp) with tanh as non linearity in the single hidden layer. this design is inherited from the transformer model for text, and we use it throughout the main paper. an initial attempt at using only image patch embeddings, globally average pooling (gap) them, followed by a linear classierjust like resnets nal feature mapperformed very poorly. however, we found that this is neither due to the extra token, nor to the gap operation. instead, published as a conference paper at iclr epochs of training imagenet linear -shot accuracy cls token, lr=e- gap, lr=e- gap, lr=e- figure : comparison of class token and global average pooling classiers. both work similarly well, but require different learning rates. pos. emb. default/stem every layer every layer shared no pos. emb. n/a n/a -d pos. emb. -d pos. emb. rel. pos. emb. n/a n/a table : results of the ablation study on positional embeddings with vit b/ model evaluated on imagenet -shot linear. the difference in performance is fully explained by the requirement for a different learning rate, see figure ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "D_4", "Section": "D.4 Positional Embedding", "Text": "we ran ablations on different ways of encoding spatial information using positional embedding. we tried the following cases: providing no positional information: considering the inputs as a bag of patches. -dimensional positional embedding: considering the inputs as a sequence of patches in the raster order (default across all other experiments in this paper). -dimensional positional embedding: considering the inputs as a grid of patches in two dimensions. in this case, two sets of embeddings are learned, each for one of the axes, x embedding, and y -embedding, each with size d/ then, based on the coordinate on the path in the input, we concatenate the x and y embedding to get the nal positional embedding for that patch. relative positional embeddings: considering the relative distance between patches to en- code the spatial information as instead of their absolute position. to do so, we use - dimensional relative attention, in which we dene the relative distance all possible pairs of patches. thus, for every given pair (one as query, and the other as key/value in the at- tention mechanism), we have an offset pq pk, where each offset is associated with an embedding. then, we simply run extra attention, where we use the original query (the content of query), but use relative positional embeddings as keys. we then use the log- its from the relative attention as a bias term and add it to the logits of the main attention (content based attention) before applying the softmax. in addition to different ways of encoding spatial information, we also tried different ways of in- corporating this information in our model. for the -dimensional and -dimensional positional embeddings, we tried three different cases: () add positional embeddings to the inputs right after published as a conference paper at iclr input patch column input patch row vit l epochs, lr=, wd= cosine similarity input patch column input patch row vit l epochs, lr=, wd= cosine similarity input patch column input patch row vit l epochs, lr=, wd= cosine similarity figure : position embeddings of models trained with different hyperparameters. the stem of them model and before feeding the inputs to the transformer encoder (default across all other experiments in this paper); () learn and add positional embeddings to the inputs at the beginning of each layer; () add a learned positional embeddings to the inputs at the beginning of each layer (shared between layers). table summarizes the results from this ablation study on a vit b/ model. as we can see, while there is a large gap between the performances of the model with no positional embedding and mod- els with positional embedding, there is little to no difference between different ways of encoding positional information. we speculate that since our transformer encoder operates on patch level inputs, as opposed to pixel level, the differences in how to encode spatial information is less impor- tant. more precisely, in patch level inputs, the spatial dimensions are much smaller than the original pixel level inputs, e.g., as opposed to , and learning to represent the spatial re- lations in this resolution is equally easy for these different positional encoding strategies. even so, the specic pattern of position embedding similarity learned by the network depends on the training hyperparameters (figure ). network depth (layer) mean attention distance (pixels) vit l/ head head head ... network depth (layer) rx + vit l/ head head head ... figure : size of attended area by head and network depth. attention distance was computed for example images by averaging the distance between the query pixel and all other pixels, weighted by the attention weight. each dot shows the mean attention distance across images for one of heads at one layer. image width is pixels. ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "D_5", "Section": "D.5 Empirical Computational Costs", "Text": "we are also interested in real world speed of the architectures on our hardware, which is not always well predicted by theoretical flops due to details like lane widths and cache sizes. for this purpose, published as a conference paper at iclr we perform timing of inference speed for the main models of interest, on a tpuv accelerator; the difference between inference and backprop speed is a constant model independent factor. figure (left) shows how many images one core can handle per second, across various input sizes. every single point refers to the peak performance measured across a wide range of batch sizes. as can be seen, the theoretical bi quadratic scaling of vit with image size only barely starts happening for the largest models at the largest resolutions. another quantity of interest is the largest batch size each model can t onto a core, larger being better for scaling to large datasets. figure (right) shows this quantity for the same set of models. this shows that large vit models have a clear advantage in terms of memory efciency over resnet models. input size peak inference speed input size largest per core batch size rx rx vit b/ vit l/ vit b/ vit l/ vit h/ rx figure : left: real wall clock timings of various architectures across input sizes. vit models have speed comparable to similar resnets. right: largest per core batch size tting on device with various architectures across input sizes. vit models are clearly more memory efcient. ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "D_6", "Section": "D.6 Axial Attention", "Text": "axial attention (huang et al., ; ho et al., ) is a simple, yet effective technique to run self- attention on large inputs that are organized as multidimensional tensors. the general idea of axial attention is to perform multiple attention operations, each along a single axis of the input tensor, instead of applying -dimensional attention to the attened version of the input. in axial attention, each attention mixes information along a particular axis, while keeping information along the other axes independent. along this line, wang et al. (b) proposed the axialresnet model in which all the convolutions with kernel size in a resnet are replaced by axial self attention, i.e. a row and column attention, augmented by relative positional encoding. we have implemented axialresnet as a baseline model. moreover, we have modied vit to process inputs in the -dimensional shape, instead of a - dimensional sequence of patches, and incorporate axial transformer blocks, in which instead of a self attention followed by an mlp, we have a a row self attention plus an mlp followed by a column self attention plus an mlp. figure , present the performance of axial resnet, axial vit b/ and axial vit b/ on ima- genet shot linear, when pretrained on jft dataset, verses the pretraining compute, both in terms of number of flops and inference time (example per seconds). as we can see, both axial vit b/ and axial vit b/ do better than their vit b counterpart in terms of performance, but it comes at our implementation is based on the open sourced pytorch implementation in https://github.com/ csrhddlam/axial deeplab. in our experiments, we reproduced the scores reported in (wang et al., b) in terms of accuracy, however, our implementation, similar to the open source implementation, is very slow on tpus. therefore, we were not able to use it for extensive large scale experiments. these may be unlocked by a carefully optimized implementation. published as a conference paper at iclr total compute imagenet -shot linear top- accuracy axialvit b/ axialvit b/ vit b/ vit b/ resnet axialresnet peak inference speed imagenet -shot linear top- accuracy axialvit b/ axialvit b/ vit b/ vit b/ resnet axialresnet figure : performance of axial attention based models, in terms of top- accuracy on imagenet -shot linear, versus their speed in terms of number of flops (left) and inference time (left). the cost of more compute. this is because in axial vit models, each transformer block with global self attention is replaced by two axial transformer blocks, one with row and one with column self- attention and although the sequence length that self attention operates on is smaller in axial case, there is a extra mlp per axial vit block. for the axialresnet, although it looks reasonable in terms of accuracy/compute trade off (figure , left), the naive implementation is extremely slow on tpus (figure , right). ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "D_7", "Section": "D.7 Attention Distance", "Text": "to understand how vit uses self attention to integrate information across the image, we analyzed the average distance spanned by attention weights at different layers (figure ). this attention distance is analogous to receptive eld size in cnns. average attention distance is highly variable across heads in lower layers, with some heads attending to much of the image, while others attend to small regions at or near the query location. as depth increases, attention distance increases for all heads. in the second half of the network, most heads attend widely across tokens. ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "D_8", "Section": "D.8 Attention Maps", "Text": "to compute maps of the attention from the output token to the input space (figures and ), we used attention rollout (abnar & zuidema, ). briey, we averaged attention weights of vit- l/ across all heads and then recursively multiplied the weight matrices of all layers. this accounts for the mixing of attention across tokens through all layers. ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "D_9", "Section": "D.9 ObjectNet Results", "Text": "we also evaluate our agship vit h/ model on the objectnet benchmark following the evaluation setup in kolesnikov et al. (), resulting in % top- accuracy and % top- accuracy. ", "Subsections": [], "Groundtruth": ""}, {"Section_Num": "D_10", "Section": "D.10 VTAB Breakdown", "Text": "table shows the scores attained on each of the vtab k tasks. published as a conference paper at iclr figure : further example attention maps as in figure (random selection). published as a conference paper at iclr table : breakdown of vtab k performance across tasks. caltech cifar- dtd flowers pets sun svhn camelyon eurosat resisc retinopathy clevr count clevr dist dmlab dspr loc dspr ori kitti dist snorb azim snorb elev mean vit h/ (jft) vit l/ (jft) vit l/ (ik) ", "Subsections": [], "Groundtruth": ""}], "Groundtruth": ""}, {"Section_Num": "NA", "Section": "NA", "Text": "published as a conference paper at iclr an image is worth x words: transformers for image recognition at scale alexey dosovitskiy,, lucas beyer, alexander kolesnikov, dirk weissenborn, xiaohua zhai, thomas unterthiner, mostafa dehghani, matthias minderer, georg heigold, sylvain gelly, jakob uszkoreit, neil houlsby, equal technical contribution, equal advising google research, brain team {adosovitskiy, neilhoulsby}@google.com abstract while the transformer architecture has become the de facto standard for natural language processing tasks, its applications to computer vision remain limited. in vision, attention is either applied in conjunction with convolutional networks, or used to replace certain components of convolutional networks while keeping their overall structure in place. we show that this reliance on cnns is not necessary and a pure transformer applied directly to sequences of image patches can perform very well on image classication tasks. when pre trained on large amounts of data and transferred to multiple mid sized or small image recognition benchmarks (imagenet, cifar-, vtab, etc, vision transformer (vit) attains excellent results compared to state of the art convolutional networks while requiring sub- stantially fewer computational resources to train. introduction ", "Subsections": [], "Groundtruth": ""}]